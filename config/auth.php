<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Параметры аутентификации по умолчанию
    |--------------------------------------------------------------------------
    |
    | Этот параметр управляет параметрами проверки подлинности "guard" и пароля по умолчанию
    | сбросом настроек для сайта. Возможны изменения этих настроек по умолчанию
    | по мере необходимости, но они идеально подходят для сайта.
    |
    */

    'defaults' => [
        'guard' => 'web',
        'passwords' => 'users',
    ],

    
    /*
    |--------------------------------------------------------------------------
    | Средства защиты от аутентификации
    |--------------------------------------------------------------------------
    |
    | Далее возможно определение всех средств защиты аутентификации для сайта.
    | Определённая отличная конфигурация по умолчанию, в которой
    | используется хранилище сеансов и Eloquentuserprovider.
    |
    | У всех драйверов аутентификации есть пользовательский провайдер. Это определяет, как
    | пользователи фактически извлекаются из базы данных или другого хранилища
    | механизмов, используемых сайтом для сохранения данных пользователя.
    |
    | Поддержка: "session"
    |
    */

    'guards' => [
        'web' => [
            'driver' => 'session',
            'provider' => 'users',
        ],
        'admin' => [
            'driver' => 'session',
            'provider' => 'admins',
        ],
        // -
    ],

    /*
    |--------------------------------------------------------------------------
    | Поставщики услуг для пользователей
    |--------------------------------------------------------------------------
    |
    | У всех драйверов аутентификации есть пользовательский провайдер. Это определяет, как
    | пользователи фактически извлекаются из базы данных или другого хранилища
    | механизмов, используемых сайтом для сохранения данных пользователя.
    |
    | Если у вас есть несколько пользовательских таблиц или моделей, вы можете настроить несколько
    | источников, которые представляют каждую модель / таблицу. Затем эти источники могут быть
    | назначены любым дополнительным средствам проверки подлинности, которые можно определить.
    |
    | Поддержка: "database", "eloquent"
    |
    */

    'providers' => [
        'users' => [
            'driver' => 'eloquent',
            'model' => App\Models\User::class,
        ],
        'admins' => [
            'driver' => 'eloquent',
            'model' => App\Models\Admin::class,
        ],
        // -

        // 'users' => [
        //     'driver' => 'database',
        //     'table' => 'users',
        // ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Сброс паролей
    |--------------------------------------------------------------------------
    |
    | Возможно указание несколько конфигураций сброса пароля, если есть несколько
    | пользовательских таблиц или моделей в сайте, и присутствует возможность иметь
    | отдельные настройки сброса пароля в зависимости от конкретных типов пользователей.
    |
    | Время истечения срока действия - это количество минут, в течение которых будет выполняться каждый токен сброса.
    | считается действительным. Благодаря этой функции безопасности токены остаются недолговечными, поэтому
    | у них остается меньше времени на угадывание. Возможна измена при необходимости.
    |
    | Настройка дроссельной заслонки - это количество секунд, которое пользователь должен подождать, прежде чем
    | генерирует больше токенов для сброса пароля. Это не позволяет пользователю
    | быстро генерировать очень большое количество токенов для сброса пароля.
    |
    */

    'passwords' => [
        'users' => [
            'provider' => 'users',
            'table' => 'password_reset_tokens',
            'expire' => 60,
            'throttle' => 60,
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Время ожидания подтверждения пароля истекло
    |--------------------------------------------------------------------------
    |
    | Здесь возможно указание количества секунд до подтверждения пароля,
    | по истечении времени ожидания пользователю будет предложено повторно ввести свой пароль на
    | подтверждение. По умолчанию время ожидания составляет 3 часа.
    |
    */

    'password_timeout' => 10800,

];
